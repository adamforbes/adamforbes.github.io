{namespace example.simple}

/**
 * Create the navBar
 */
{template .navBar}
  <div class='nav-bar'>
    <div class='nav-title-name'>Adam<br>Forbes</div>
    <div class='nav-links'>
      <a>Projects</a>
      <br>
      <a>Resume</a>
    </div>
  </div>
{/template}

/**
  designing the topic section of a page.
  They will always have a Title, a Contents, and an optional link
  The title could be...
    - an image logo
    - a text title

  The contents could be...
    - text
    - a set of images
      - this could be a single image, two images, three images
    - a set of images and text

  The link is optional

  Because all data in javascript is a map already, we can easily 
  create objects with variable contents

  {topics: [
    {title: {text: 'about me'},
     contents: [
        {text: 'blah blah blah blah my life is boring'}, 
        {image: 'myFace'},
        {moreLink: {text: 'more information about my face', link: 'ace.jpg'}
      ]}, 
    {title: {img: 'image.jpg'},
     contents: [
        {tripleImage: 'myFace'},
        {moreLink: {text: 'more cool stuff', link: 'moreCoolStuff.com'}
      ]}
  ]}
 */

 /*
 * talked to david dapenda shortly regarding how to 
 check for a key. If the value is a string or I don't
 expect it to ever be null, you can do {if isNonNull(object.key)}
 however, if you are looking for an object, then if object.key is 
 the way to go.
 */

/**
 * Generates the main page with a list of topics
 * @param topics a list of topics to generate
 */
{template .mainPage}
  <div class='main-page'>
    {foreach $topic in $topics}
      {call .topic data="$topic" /}
    {/foreach}
  </div>
{/template}

/**
 * Generates a topic within the main page
 * @param topicId a unique Id for each topic, to be used in naming and style override
 * @param title the title of the topic
 * @param contents the contents of this topic
 * @param? footer optional footer to add to a topic
 */
{template .topic}
  <div class='topic-container' id='{$topicId}'> 
    {if $title == '_imageOverride'}
      <img class='topic-title-image' id='{$topicId}-title' 
          src='img/{$topicId}/{$topicId}-title.png' alt='{$topicId}'>
    {else}
      <div class='topic-title'>
        {$title}
      </div>
    {/if}
    //Generate the content of the topic
    {foreach $content in $contents}
      {call .content}
        {param topicId: $topicId /}
        {param content: $content /}
      {/call}
    {/foreach}
    {if $footer}
      {call .footer}
        {param footer: $footer /}
      {/call}
    {/if}
  </div>
{/template}

/**
 * Generates a single piece of content for a topic
 * @param topicId a unique Id for each topic, to be used in naming and style override
 * @param content the piece of content to render on the page
 */
{template .content}
  <div class='topic-content'>
    {if $content.text}
      <div class='topic-content-text'>
        {$content.text}
      </div>
    {elseif $content.image}
      <img src='img/{$content.image}' alt='{$content.image}'>
    {elseif $content.tripleImage}
      <div class='topic-content-gallery-sampling 
          topic-content-gallery-sampling-triple clearfix'>
        {foreach $image in $content.tripleImage}
          <img src='img/{$topicId}/{$topicId}-{$image}.jpg' 
              alt='{$topicId}-{$image}' id='{$topicId}-{$image}'>
        {/foreach}
      </div>
    {/if}
  </div>
{/template}

/**
 * Generates a single piece of content for a topic
 * @param footer the contents of the footer.
 */
{template .footer}
  <div class='topic-footer clearfix'>
    {if $footer.moreLink}
      <div class='topic-footer-more-link'>
        <a href=''>{$footer.moreLink}</a>
      </div>
    {/if}
    {if $footer.date}
      <div class='topic-footer-date'>
        {$footer.date}
      </div>
    {/if}
  </div>
{/template}

