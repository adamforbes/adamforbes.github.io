/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  background-color: #fafafa;
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* ==========================================================================
   SASS Variables and Mixins
   ========================================================================== */

$nav-bar-width: 230px;
$main-column-width: 480px;
$main-font: 'Roboto';
$main-condensed-font: 'Roboto Condensed';
$main-color: #eb1d5d;
$text-color1: rgb(33, 33, 33);
$text-color2: #FFFFFF;
$break-max: 840px; // Chosen arbitrarily from the design. Mainly from the width topic-content-text
$break-min: 520px;
$break-min-margin: 20px;
$page-width-threshold: 230px; // The threshold set for minimum styling width.
$nav-title-top-threshold: 20vh;

@mixin opacity-transition($duration, $timing-function) {
  -webkit-transition: opacity $duration $timing-function;
  -moz-transition: opacity $duration $timing-function;
  -o-transition: opacity $duration $timing-function;
  transition: opacity $duration $timing-function;
}

@mixin color-transition($duration, $timing-function) {
  -webkit-transition: color $duration $timing-function;
  -moz-transition: color $duration $timing-function;
  -o-transition: color $duration $timing-function;
  transition: color $duration $timing-function;
}

@mixin background-color-transition($duration, $timing-function) {
  -webkit-transition: background-color $duration $timing-function;
  -moz-transition: background-color $duration $timing-function;
  -o-transition: background-color $duration $timing-function;
  transition: background-color $duration $timing-function;
}

/* ==========================================================================
   Type Styles designed by Adam
   ========================================================================== */

.ts-body {
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  color: $text-color1;
  display: block;
  font-family: $main-font, sans-serif;
  font-size: 14px;
  letter-spacing: 0.1px;
  line-height: 1.6em;
  text-align: justify;
}

.ts-h1 {
  font-family: $main-condensed-font, sans-serif;
  font-size: 4.2em;
  line-height: 1.2em;
}

.ts-h2 {
  font-family: $main-condensed-font, sans-serif;
  font-size: 1.6em;
  line-height: 2.1em;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

.nav-bar {
  background-color: $main-color;
  height: 100%;
  position: fixed;
  width: $nav-bar-width;
  z-index: 10;
  @media (min-width: 0px) and (max-width: $break-min) {
    left: -$nav-bar-width;
    width: $nav-bar-width * .7;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    left: -$nav-bar-width;
    width: $nav-bar-width * .8;
  }
  @media (min-width: $break-max) {
    left: 0px;
    width: $nav-bar-width;
  }
}

.nav-link {
  @extend .clickable;
  margin-bottom: 6px;
}

.nav-title-name {
  @extend .clickable;
  color: $text-color2;
  font-family: $main-condensed-font, sans-serif;
  font-size: 3em;
  font-style: italic;
  font-weight: 300;
  line-height: 1.3em;
  margin-left: 30px;
  margin-top: $nav-title-top-threshold;
}

.nav-links {
  color: $text-color2;
  font-family: $main-font, sans-serif;
  font-size: 1em;
  position: absolute;
  text-align: left;
  margin-left: 30px;
  margin-top: 30px;
}

.main-page {
  $h-margin: 40px;
  @media (min-width: 0px) and (max-width: $break-min) {
    width: auto;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    margin-left: auto;
    margin-right: auto;
  }
  @media (min-width: $break-max) {
    margin-bottom: 30px;
    margin-left: $nav-bar-width + $h-margin;
    margin-right: $h-margin;
  }
}

.topic-container:not(:first-child) {
  margin-top: 70px;
}

.topic-container:first-child {
  padding-top: 20px;
  @media (min-width: 0px) and (max-width: $break-min) {
    padding-top: 70px;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    padding-top: 70px;
  }
  @media (min-width: $break-max) {
    padding-top: 20px;
  }
}

.topic-header {
  margin-bottom: 20px;
  @media (min-width: 0px) and (max-width: $break-min) {
    margin-left: $break-min-margin;
    margin-right: $break-min-margin;
    width: auto;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    margin: 0 auto;
    width: $main-column-width;
  }
  @media (min-width: $break-max) {
  }
}

.topic-header-title {
  @extend .clickable;
  margin-bottom: 10px;
}

.topic-header-title-text {
  @extend .clickable;
  @extend .ts-h1;
}

.topic-header-title-image img {
  @extend .clickable;
  @media (min-width: 0px) and (max-width: $break-min) {
    width: 100%;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    width: $main-column-width;
  }
  @media (min-width: $break-max) {
    //Adding break-min-margin to account for the indentation of the content text
    width: $main-column-width + $break-min-margin;
  }
}

.topic-header-chronology {
  @extend .ts-h2;
  color: #DDD;
  margin-bottom: 20px;
}

.topic-content > div:not(:first-child) {
  margin-top: 30px;
}

// This will be used as a parent class to all topic-content objects
// that should not be flush when margins change. Images do not have
// this
.responsive-margin {
  @media (min-width: 0px) and (max-width: $break-min) {
    margin-left: $break-min-margin;
    margin-right: $break-min-margin;
    width: auto;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    margin: 0 auto;
    width: $main-column-width;
  }
  @media (min-width: $break-max) {
    margin-left: $break-min-margin;
    width: $main-column-width;
  }
}

.topic-content-text {
  @extend .responsive-margin;
}

.topic-content-subheading {
  @extend .ts-h2;
  @extend .responsive-margin;
}

.topic-content-subheading + div {
  margin-top: 0px !important;
}

.topic-content-image {
  width: 100%;
  @media (min-width: 0px) and (max-width: $break-min) {
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
  }
  @media (min-width: $break-max) {
  }

  img {
    display:block;
    max-width: 100%;
    max-height: 100vh;
    @media (min-width: 0px) and (max-width: $break-min) {
      margin:auto;
    }
    @media (min-width: $break-min) and (max-width: $break-max) {
      margin:auto;
    }
    @media (min-width: $break-max) {
    }
  }
}

.topic-content-caption {
  margin-top: 10px !important;
  font-style: italic;
  @media (min-width: 0px) and (max-width: $break-min) {
    width: auto;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    margin: 0 auto;
  }
  @media (min-width: $break-max) {
    width: $main-column-width;
  }
}

.button {
  @include background-color-transition(200ms, ease);
  border: 1px solid $main-color;
  display: inline-block;
  opacity: 1.0;
  padding: 10px 24px;
  &:hover {
    background-color: $main-color;
    cursor: pointer;
    & .button-text {
      color: white;
    }
    & + .open-in-new-tab {
      opacity: 1;
    }
  }

  @media (min-width: 0px) and (max-width: $break-min) {
    margin-left: $break-min-margin;
  }
  @media (min-width: $break-min) and (max-width: $break-max) {
    margin: 0 auto;
  }
  @media (min-width: $break-max) {
    margin-left: $break-min-margin;
  }
}

.button-text {
  @include color-transition(200ms, ease);
  color: $main-color;
  text-transform: lowercase;
}

.open-in-new-tab {
  @include opacity-transition(200ms, ease);
  color: $main-color;
  cursor: default;
  font-size: 20px;
  margin-left: 24px;
  margin-top: 10px;
  opacity: 0.0;
}

.wip-page {
  @extend .responsive-margin;
  @extend .ts-h1;
  padding-top: $nav-title-top-threshold;
}

.clickable {
  @include opacity-transition(200ms, ease);
  opacity: 1.0;
  &:hover {
    cursor: pointer;
    opacity: .4;
  }
}
/* ==========================================================================
   Overlays
   ========================================================================== */

.menu-toggle {
  font-size: 1.7em;
  margin-top: 7px;

  @media (min-width: 0px) and (max-width: $page-width-threshold) {
    display: none !important;
  }
  @media (min-width: $page-width-threshold) and (max-width: $break-max) {
    left: $break-min-margin;
    top: $break-min-margin/2;
    position: fixed;
    z-index: 11;
  }
  @media (min-width: $break-max) {
    display: none !important;
  }
}

.menu-toggle:hover {
  cursor: pointer;
}

.animation-overlay {
  background-color: $main-color;
  height: 100%;
  margin: 0;
  padding: 0;
  position: fixed;
  top: 0;
  width: 0%;
  z-index: 9;
  @media (min-width: 0px) and (max-width: $page-width-threshold) {
    display: none !important;
  }
  @media (min-width: $page-width-threshold) and (max-width: $break-max) {
    left: 0;
  }
  @media (min-width: $break-max) {
    left: $nav-bar-width;
  }
}

.page-too-small-overlay {
  font-family: 'Roboto';
  text-align: center;

  @media (max-width: $page-width-threshold) {
    background-color: $main-color;
    height: 100%;
    margin: 0;
    padding: 0;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 10;
  }
  @media (min-width: $page-width-threshold) {
    display: none !important;
  }
  .page-too-small-overlay-content {
    margin: 90px auto;
    width: 90px;
  }
}

// Overlay to be applied when the navBar is open for small screens
// This will create a sense of depth through shadow
.layering-shadow-overlay {
  background-color: $main-color;
  cursor: pointer;
  height: 100%;
  margin: 0;
  opacity: 0;
  padding: 0;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 8;
  pointer-events: none;
}

#p5-container {
  margin: 0;
  padding: 0;
  position: fixed;
  pointer-events: none;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers:
 */

.hidden {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.clearfix:after {
  clear: both;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
     (min-resolution: 1.25dppx),
     (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important; /* Black prints faster:
                   http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]:after {
    content: " (" attr(href) ")";
  }

  abbr[title]:after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */

  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
   * Printing Tables:
   * http://css-discuss.incutio.com/wiki/Printing_Tables
   */

  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}
