/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  background-color: #fafafa;
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
.nav-bar {
  background-color: #eb1d5d;
  height: 100%;
  position: fixed;
  width: 230px; }

.nav-title-name {
  color: #FFFFFF;
  font-family: "Roboto Condensed", sans-serif;
  font-size: 3em;
  font-style: italic;
  font-weight: 300;
  line-height: 1.3em;
  margin-left: 30px;
  margin-top: 150px; }

.nav-links {
  color: #FFFFFF;
  font-family: "Roboto", sans-serif;
  font-size: 1em;
  line-height: 2em;
  position: absolute;
  text-align: left;
  margin-left: 30px;
  margin-top: 30px; }

.main-page {
  left: 230px;
  padding: 30px 40px 10px 40px;
  position: absolute;
  width: calc(100% - $nav-bar-width - $main-page-padding-left - $main-page-padding-right); }

.topic-container:not(:first-child) {
  margin-top: 70px; }

.topic-header-title-text {
  padding-bottom: 20px; }

.topic-header-title-image {
  padding-bottom: 20px;
  width: 100%; }

.topic-content-text {
  padding-left: 20px;
  width: 100%; }

.topic-content-image img {
  width: 100%; }

.topic-content-gallery {
  margin-top: 40px; }

.topic-footer {
  margin-top: 10px; }

.topic-footer-more-link a {
  color: #777;
  text-decoration: none; }

.topic-footer-more-link a:visited {
  text-decoration: none; }

.topic-page-content-image img {
  max-width: 100%; }

@media (max-width: 600px) {
  .main-page {
    left: 0;
    padding: 30px 0px 0px 0px;
    position: absolute;
    width: 100%; }

  /* THIS IS NOT THE BEST WAY TO DO THIS. I need to figure out a method of giving the text a padding but not images because 
     we want these to be flush when in mobile view */
  .main-page :not(img) {
    padding-left: 10px;
    padding-right: 10px; }

  .topic-content-gallery-triple img {
    width: calc(100% + 20px); } }
/* AKA when the screen is wider than 750px */
@media (min-width: 750px) {
  /* min-width = maxWidth(the-argus-mag-title) + .main-page.left + .main-page.padding */
  #the-argus-mag-title img {
    width: 500px; }

  .topic-content-text {
    width: 500px; }

  .topic-content-gallery-triple img {
    width: calc(100% / 3 - 80px / 3);
    /* width = (total / numImages) - (total margin / numImages)*/ }

  .topic-content-gallery-triple img:not(:first-child) {
    margin-left: 10px; } }
.clickable {
  -webkit-transition: opacity 200ms ease;
  -moz-transition: opacity 200ms ease;
  -o-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  opacity: 1.0;
  display: inline-block;
  /* This will fit the size of this div to its contents, so the hit box is always the same as the contents */ }

.clickable:hover {
  cursor: pointer;
  opacity: .4; }

.animation-overlay {
  background-color: #eb1d5d;
  height: 100%;
  left: 230px;
  margin: 0;
  padding: 0;
  position: fixed;
  top: 0;
  width: 0%;
  z-index: 10; }

/* ==========================================================================
   Type Styles designed by Adam
   ========================================================================== */
.ts-body {
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  color: #212121;
  display: block;
  font-family: "Roboto", sans-serif;
  font-size: 14px;
  letter-spacing: 0.1px;
  line-height: 1.6em;
  text-align: justify; }

.ts-h1 {
  font-family: "Roboto Condensed", sans-serif;
  font-size: 2.2em; }

.ts-h2 {
  color: #DDD;
  font-family: "Roboto Condensed", sans-serif;
  font-size: 1.6em; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers:
 */
.hidden {
  display: none !important; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

.float-right {
  float: right; }

.float-left {
  float: left; }

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */
@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */ }
@media print, (min-resolution: 1.25dppx), (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */ }
/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
         /* Black prints faster:
http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }

  a,
  a:visited {
    text-decoration: underline; }

  a[href]:after {
    content: " (" attr(href) ")"; }

  abbr[title]:after {
    content: " (" attr(title) ")"; }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }

  /*
   * Printing Tables:
   * http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group; }

  tr,
  img {
    page-break-inside: avoid; }

  img {
    max-width: 100% !important; }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }

  h2,
  h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=mainScss.css.map */
